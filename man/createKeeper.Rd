% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createKEEPER.R
\name{createKeeper}
\alias{createKeeper}
\title{Creates a folder with the keeperOutput to review person level profiles.}
\usage{
createKeeper(
  connectionDetails = NULL,
  connection = NULL,
  cohortDatabaseSchema = NULL,
  cdmDatabaseSchema,
  tempEmulationSchema = getOption("sqlRenderTempEmulationSchema"),
  cohortTable = "cohort",
  cohortDefinitionId,
  cohortName = NULL,
  sampleSize = 20,
  personIds = NULL,
  databaseId,
  assignNewId = FALSE,
  useAncestor = TRUE,
  doi,
  comorbidities,
  symptoms,
  alternativeDiagnosis,
  drugs,
  diagnosticProcedures,
  measurements,
  treatmentProcedures,
  complications
)
}
\arguments{
\item{connectionDetails}{An R object of type \code{connectionDetails} created using the
\code{\link[DatabaseConnector:createConnectionDetails]{DatabaseConnector::createConnectionDetails()}} function. Not
required of \code{connection} is provided.}

\item{connection}{The connection to the database server created using
\code{\link[DatabaseConnector:connect]{DatabaseConnector::connect()}}. Not required if \code{connectionDetails}
is provided.}

\item{cohortDatabaseSchema}{The name of the database schema that is the location where the
cohort to review is stored.}

\item{cdmDatabaseSchema}{The name of the database schema that contains the OMOP CDM
instance. Requires read permissions to this database. On SQL
Server, this should specify both the database and the schema,
so for example 'cdm_instance.dbo'.}

\item{tempEmulationSchema}{Some database platforms like Oracle and Impala do not truly support temp tables. To
emulate temp tables, provide a schema with write privileges where temp tables
can be created.}

\item{cohortTable}{The tablename that contains the cohort to review.}

\item{cohortDefinitionId}{The cohort id to extract records.}

\item{cohortName}{(optional) Cohort Name}

\item{sampleSize}{(Optional, default = 20) The number of persons to randomly sample. Ignored, if personId is given.}

\item{personIds}{(Optional) An array of personId's to look for in Cohort table and CDM.}

\item{databaseId}{A short string for identifying the database (e.g. 'Synpuf'). This will be displayed
in shiny app to toggle between databases. Should not have space or underscore (_).}

\item{assignNewId}{(Default = FALSE) Do you want to assign a newId for persons. This will replace the personId in the source with a randomly assigned newId.}

\item{useAncestor}{keeperOutput: a switch for using concept_ancestor to retrieve relevant terms vs using verbatim strings of codes}

\item{doi}{keeperOutput: input string for concept_ids for disease of interest}

\item{comorbidities}{keeperOutput: input string for concept_ids for co-morbidities associated with the disease of interest (such as smoking or hypelipidemia for diabetes)}

\item{symptoms}{keeperOutput: input string for concept_ids for symptoms associated with the disease of interest (such as weight gain or loss for diabetes)}

\item{alternativeDiagnosis}{keeperOutput: input string for concept_ids for competing diagnosis within a month after the index date}

\item{drugs}{keeperOutput: input string for concept_ids for drug exposures relevant to the disease of interest, to be used for prior exposures and treatment after the index date.
You may input drugs that are used to treat disease of interest and drugs used to treat alternative diagnosis}

\item{diagnosticProcedures}{keeperOutput: input string for concept_ids for diagnostic procedures relevant to the condition of interest within a month prior and after the index date}

\item{measurements}{keeperOutput: input string for concept_ids for lab tests relevant to the disease of interest within a month prior and after the index date}

\item{treatmentProcedures}{keeperOutput: input string for concept_ids for treatment procedures relevant to the disease of interest within a month after the index date}

\item{complications}{keeperOutput: input string for concept_ids for complications of the disease of interest within a year after the index date}
}
\description{
Export person level data from OMOP CDM tables for eligible persons in the cohort. Creates a folder with the keeperOutput to review person level profiles.
}
\examples{
\dontrun{
connectionDetails <- createConnectionDetails(
  dbms = 'postgresql',
  server = 'ohdsi.com',
  port = 5432,
  user = 'me',
  password = 'secure'
)

XXX: to do: add windows as parameters, check ranges for measurements, fix NA, fix length of CSV 
     string, add support for cdi as list
XXX: consider: adding a * for primary status
createKeeper(
  connectionDetails = connectionDetails,
  databaseId = "Synpuf",
  cdmDatabaseSchema = "dbo",
  cohortDatabaseSchema = "results",
  cohortTable = "cohort",
  cohortDefinitionId = 1234,
  cohortName = "DM type I",
  sampleSize = 100,
  assignNewId = TRUE,
  useAncestor = TRUE,
  doi = c(201820,442793,443238,4016045,4065354,45757392, 4051114, 433968, 375545, 29555009, 
          4209145, 4034964, 380834, 4299544, 4226354, 4159742, 43530690, 433736, 320128, 4170226,
          40443308, 441267, 4163735, 192963, 85828009),
  symptoms = c(4232487, 4229881),
  comorbidities = c(432867, 436670),
  drugs = c(1730370, 21604490, 21601682, 21601855, 21601462, 21600280, 21602728, 1366773, 
            21602689, 21603923, 21603746),
  diagnosticProcedures = c(40756884, 4143852, 2746768, 2746766),
  measurements	= c(3034962, 3000483, 3034962, 3000483, 3004501, 3033408, 3005131, 3024629, 
                   3031266, 3037110, 3009261, 3022548, 3019210, 3025232, 3033819,
                   3000845, 3002666, 3004077, 3026300, 3014737, 3027198, 3025398, 3010300, 
                   3020399, 3007332, 3025673, 3027457, 3010084, 3004410, 3005673),
  alternativeDiagnosis = c(201820,442793,443238,4016045,4065354,45757392, 4051114, 433968, 
                           375545, 29555009, 4209145, 4034964, 380834, 4299544, 4226354, 4159742,
                           43530690, 433736, 320128, 4170226, 40443308, 441267, 4163735, 192963, 
                           85828009),
  treatmentProcedures = c(0),
  complications =  c(201820,442793,443238,4016045,4065354,45757392, 4051114, 433968, 375545, 
                     29555009, 4209145, 4034964, 380834, 4299544, 4226354, 4159742, 43530690, 
                     433736, 320128, 4170226, 40443308, 441267, 4163735, 192963, 85828009)                             
)
}


}
